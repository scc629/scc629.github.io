{"version":3,"file":"component---src-templates-blog-post-js-934013a94583c6178407.js","mappings":"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","sources":["webpack://gatsby-starter-netlify-cms/./src/components/FullWidthImage.js","webpack://gatsby-starter-netlify-cms/./src/components/PreviewCompatibleImage.js","webpack://gatsby-starter-netlify-cms/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport default function FullWidthImage(props) {\n  const {\n    height = '100vh',\n    img,\n    title,\n    subheading,\n    imgPosition = \"top left\",\n    center = \"false\",\n    children,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n          position: \"relative\",\n          top: \"-3.25rem\",\n          textAlign: center ? \"center\" : \"\"\n        }}\n      >\n        {img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              height: height,\n              width: \"100%\",\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              maxHeight: height,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgba(255, 68, 0, 0) 0.5rem 0px 0px, rgb(255, 68, 0, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                  textShadow: \"-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgba(255, 68, 0, 0) 0.5rem 0px 0px, rgb(255, 68, 0, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                  textShadow: \"-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n            {children && <div>{children}</div>}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImage.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst PreviewCompatibleImage = ({ imageInfo }) => {\n  const imageStyle = { borderRadius: \"5px\" };\n\n  const { alt = \"\", childImageSharp, image } = imageInfo;\n\n  if (!!image && !!image.childImageSharp) {\n    return (\n      <GatsbyImage\n        image={image.childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n  } else if (!!childImageSharp) {\n    return (\n      <GatsbyImage\n        image={childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n    // for Netlify CMS \n  } else if (image) {\n    return <img style={{imageStyle}} src={image} alt={alt} />;\n  } else {\n    return null\n  }\n};\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n};\n\nexport default PreviewCompatibleImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/Layout\";\n// import Features from \"../components/Features\";\n// import Testimonials from \"../components/Testimonials\";\n// import Pricing from \"../components/Pricing\";\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\nimport FullWidthImage from \"../components/FullWidthImage\";\n\n// eslint-disable-next-line\nexport const BlogPostTemplate = ({\n  image,\n  title,\n  // heading,\n  // description,\n  // intro,\n  main,\n  // testimonials,\n  // fullImage,\n  // pricing,\n}) => {\n  const heroImage = getImage(image) || image;\n  // const fullWidthImage = getImage(fullImage) || fullImage;\n\n  return (\n    <div className=\"content\">\n      <FullWidthImage img={heroImage} title={title} />\n      <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"section\">\n            {/* <div className=\"columns\">\n              <div className=\"column is-7 is-offset-1\">\n                <h3 className=\"has-text-weight-semibold is-size-2\">\n                  {heading}\n                </h3>\n                <p>{description}</p>\n              </div>\n            </div> */}\n            <div className=\"columns\">\n              <div className=\"column is-10 is-offset-1\">\n                {/* <Features gridItems={intro.blurbs} />  */}\n                <div className=\"columns\">\n                  <div className=\"column is-12\">\n                    {/* <h3 className=\"has-text-weight-semibold is-size-3\">\n                      {main.heading}\n                    </h3> */}\n                    <p style={{ fontSize: \"1.5em\"}}>{main.description}</p>\n                  </div>\n                </div>\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-vertical\">\n                    <div className=\"tile\">\n                      <div className=\"tile is-parent is-vertical\">\n                        <article className=\"tile is-child\">\n                          <PreviewCompatibleImage imageInfo={main.image1} />\n                        </article>\n                      </div>\n                      <div className=\"tile is-parent\">\n                        <article className=\"tile is-child\">\n                          <PreviewCompatibleImage imageInfo={main.image2} />\n                        </article>\n                      </div>\n                    </div>\n                    {/* <div className=\"tile is-parent\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image3} />\n                      </article>\n                    </div> */}\n                  </div>\n                </div>\n                {/* <Testimonials testimonials={testimonials} /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* <FullWidthImage img={fullWidthImage} imgPosition={\"bottom\"} />\n      <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-10 is-offset-1\">\n                <h2 className=\"has-text-weight-semibold is-size-2\">\n                  {pricing.heading}\n                </h2>\n                <p className=\"is-size-5\">{pricing.description}</p>\n                <Pricing data={pricing.plans} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section> */}\n    </div>\n  );\n};\n\nBlogPostTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n  main: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    image1: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image2: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image3: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  }),\n  testimonials: PropTypes.array,\n  fullImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  pricing: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    plans: PropTypes.array,\n  }),\n};\n\nconst BlogPost = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <BlogPostTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n        main={frontmatter.main}\n        testimonials={frontmatter.testimonials}\n        fullImage={frontmatter.full_image}\n        pricing={frontmatter.pricing}\n      />\n    </Layout>\n  );\n};\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default BlogPost;\n\nexport const blogPostQuery = graphql`\n  query BlogPost($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        heading\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 64, layout: CONSTRAINED)\n              }\n            }\n            text\n          }\n          heading\n          description\n        }\n        main {\n          heading\n          description\n          image1 {\n            alt\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 526, quality: 92, layout: CONSTRAINED)\n              }\n            }\n          }\n          image2 {\n            alt\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 526, quality: 92, layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n        testimonials {\n          author\n          quote\n        }\n\n        full_image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        pricing {\n          heading\n          description\n          plans {\n            description\n            items\n            plan\n            price\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["FullWidthImage","props","height","img","title","subheading","imgPosition","center","children","className","style","display","alignItems","position","top","textAlign","url","src","objectFit","objectPosition","gridArea","width","aspectratio","alt","formats","G","image","maxHeight","layout","placeItems","boxShadow","backgroundColor","color","lineHeight","padding","textShadow","marginTop","imageInfo","imageStyle","borderRadius","childImageSharp","gatsbyImageData","BlogPostTemplate","main","heroImage","getImage","fontSize","description","image1","image2","frontmatter","data","markdownRemark","heading","intro","testimonials","fullImage","full_image","pricing"],"sourceRoot":""}