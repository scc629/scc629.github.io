{"version":3,"file":"component---src-templates-index-page-js-8a6ccce15fe701b3d000.js","mappings":"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","sources":["webpack://gatsby-starter-netlify-cms/./src/components/FullWidthImage.js","webpack://gatsby-starter-netlify-cms/./src/components/PreviewCompatibleImage.js","webpack://gatsby-starter-netlify-cms/./src/components/Features.js","webpack://gatsby-starter-netlify-cms/./src/templates/index-page.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport default function FullWidthImage(props) {\n  const {\n    height = '100vh',\n    img,\n    title,\n    subheading,\n    imgPosition = \"top left\",\n    center = \"false\",\n    children,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n          position: \"relative\",\n          top: \"-3.25rem\",\n          textAlign: center ? \"center\" : \"\"\n        }}\n      >\n        {img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              height: height,\n              width: \"100%\",\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              maxHeight: height,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            className=\"column is-10\"\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n              margin: \"auto\"\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgba(255, 68, 0, 0) 0.5rem 0px 0px, rgb(255, 68, 0, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                  textShadow: \"-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgba(255, 68, 0, 0) 0.5rem 0px 0px, rgb(255, 68, 0, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                  textShadow: \"-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n            {children && <div>{children}</div>}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImage.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst PreviewCompatibleImage = ({ imageInfo }) => {\n  const imageStyle = { borderRadius: \"5px\" };\n\n  const { alt = \"\", childImageSharp, image } = imageInfo;\n\n  if (!!image && !!image.childImageSharp) {\n    return (\n      <GatsbyImage\n        image={image.childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n  } else if (!!childImageSharp) {\n    return (\n      <GatsbyImage\n        image={childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n    // for Netlify CMS \n  } else if (image) {\n    return <img style={{imageStyle}} src={image} alt={alt} />;\n  } else {\n    return null\n  }\n};\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n};\n\nexport default PreviewCompatibleImage;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map((item) => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <div\n              style={{\n                width: \"240px\",\n                display: \"inline-block\",\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <h4 className=\"subtitle has-text-centered\" style={{ marginTop: \"1em\" }}>{item.title}</h4>\n          <p className=\"paragraph has-text-centered\">{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n);\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n    })\n  ),\n};\n\nexport default FeatureGrid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\n\nimport Layout from \"../components/Layout\";\nimport Features from \"../components/Features\";\n// import BlogRoll from \"../components/BlogRoll\";\nimport FullWidthImage from \"../components/FullWidthImage\";\n\n// eslint-disable-next-line\nexport const IndexPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  // description,\n  intro,\n}) => {\n  const heroImage = getImage(image) || image;\n\n  return (\n    <div style={{ background: '#0b0605' }}>\n      <FullWidthImage img={heroImage} title={title} subheading={subheading} />\n      <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-10 is-offset-1\">\n                <div className=\"content\">\n                  <div className=\"content\">\n                    <div className=\"tile\">\n                      <h1 className=\"title\">{mainpitch.title}</h1>\n                    </div>\n                    <div className=\"tile\">\n                      <h3 className=\"subtitle\" style={{ fontWeight: \"unset\" }}>{mainpitch.description}</h3>\n                    </div>\n                  </div>\n                  <div className=\"columns\">\n                    <div className=\"column is-12\">\n                      <h3 className=\"title\" style={{ fontSize: \"2em\" }}>\n                        {heading}\n                      </h3>\n                      {/* <p>{description}</p> */}\n                    </div>\n                  </div>\n                  <Features gridItems={intro.blurbs} />\n                  {/* <div className=\"columns\">\n                    <div className=\"column is-12 has-text-centered\">\n                      <Link className=\"btn\" to=\"/products\">\n                        See all products\n                      </Link>\n                    </div>\n                  </div> */}\n                  {/* <div className=\"column is-12\">\n                    <h3 className=\"has-text-weight-semibold is-size-2\">\n                      Latest stories\n                    </h3>\n                    <BlogRoll />\n                    <div className=\"column is-12 has-text-centered\">\n                      <Link className=\"btn\" to=\"/blog\">\n                        Read more\n                      </Link>\n                    </div>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nIndexPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n};\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n      />\n    </Layout>\n  );\n};\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        heading\n        subheading\n        mainpitch {\n          title\n          description\n        }\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 64, layout: CONSTRAINED)\n              }\n            }\n            title\n            text\n          }\n          heading\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["FullWidthImage","props","height","img","title","subheading","imgPosition","center","children","className","style","display","alignItems","position","top","textAlign","url","src","objectFit","objectPosition","gridArea","width","aspectratio","alt","formats","G","image","maxHeight","layout","placeItems","margin","boxShadow","backgroundColor","color","lineHeight","padding","textShadow","marginTop","imageInfo","imageStyle","borderRadius","childImageSharp","gatsbyImageData","gridItems","map","item","key","text","PreviewCompatibleImage","IndexPageTemplate","heading","mainpitch","intro","heroImage","getImage","background","fontWeight","description","fontSize","Features","blurbs","frontmatter","data","markdownRemark","Layout"],"sourceRoot":""}