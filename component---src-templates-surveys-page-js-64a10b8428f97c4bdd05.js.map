{"version":3,"file":"component---src-templates-surveys-page-js-64a10b8428f97c4bdd05.js","mappings":"qMAIe,SAASA,EAAeC,GACrC,MAQIA,EAPFC,OAAAA,OADF,MACW,QADX,EAEEC,EAMEF,EANFE,IACAC,EAKEH,EALFG,MACAC,EAIEJ,EAJFI,WAJF,EAQIJ,EAHFK,YAAAA,OALF,MAKgB,WALhB,IAQIL,EAFFM,OAAAA,OANF,MAMW,QANX,EAOEC,EACEP,EADFO,SAGF,OACE,gBAAC,WAAD,KACE,uBACEC,UAAU,eACVC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,SAAU,WACVC,IAAK,WACLC,UAAWR,EAAS,SAAW,KAGhCJ,MAAAA,GAAAA,EAAKa,IACJ,uBACEC,IAAKd,EACLe,UAAW,QACXC,eAAgBb,EAChBI,MAAO,CACLU,SAAU,MAEVlB,OAAQA,EACRmB,MAAO,QAGTC,YAAa,EAEbC,IAAI,GACJC,QAAS,CAAC,OAAQ,OAAQ,UAG5B,gBAAC,EAAAC,EAAD,CACEC,MAAOvB,EACPe,UAAW,QACXC,eAAgBb,EAChBI,MAAO,CACLU,SAAU,MAEVO,UAAWzB,GAEb0B,OAAO,YAEPN,YAAa,EAEbC,IAAI,GACJC,QAAS,CAAC,OAAQ,OAAQ,WAG5BpB,GAASC,IACT,uBACEI,UAAU,eACVC,MAAO,CAELU,SAAU,MACVP,SAAU,WAEVgB,WAAY,SACZlB,QAAS,OACTmB,OAAQ,SAIT1B,GACC,sBACEK,UAAU,8EACVC,MAAO,CACLqB,UACE,yEACFC,gBAAiB,qBACjBC,MAAO,QACPC,WAAY,IACZC,QAAS,SACTC,WAAY,uEAGbhC,GAGJC,GACC,sBACEI,UAAU,8EACVC,MAAO,CACLqB,UACE,yEACFC,gBAAiB,qBACjBC,MAAO,QACPC,WAAY,IACZC,QAAS,UACTE,UAAW,SACXD,WAAY,uEAGb/B,GAGJG,GAAY,2BAAMA,Q,6IC1GlB8B,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAS9B,EAAZ,EAAYA,UAAZ,OACzB,uBAAKA,UAAWA,EAAW+B,wBAAyB,CAAEC,OAAQF,M,UCKnDG,EAAsB,SAAC,GAAsC,IAApCtC,EAAmC,EAAnCA,MAAOuC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMlB,EAAY,EAAZA,MACrDmB,GAAYC,EAAAA,EAAAA,GAASpB,IAAUA,EACrC,OACE,uBAAKhB,MAAO,CAAEqC,WAAY,YACxB,gBAAC/C,EAAA,EAAD,CAAgBG,IAAK0C,EAAWzC,MAAOA,EAAOC,WAAYsC,EAAUpC,OAAO,QACzE,qBAAGyC,KAAMJ,EAAMK,OAAO,SAASC,IAAI,cAAa,qBAAGzC,UAAU,oCAAoCmC,OAiDzG,EAtBoB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KACGC,EAASD,EAAzBE,eACAC,EAAgBH,EAAKE,eAArBC,YAER,OACE,gBAACC,EAAA,EAAD,KACE,gBAACb,EAAD,CACEc,iBAAkBlB,EAClBlC,MAAOgD,EAAKE,YAAYlD,MACxBuC,SAAUS,EAAKE,YAAYX,SAC3BC,KAAMQ,EAAKE,YAAYV,KACvBL,QAASa,EAAKK,KACd/B,MAAO4B,EAAY5B","sources":["webpack://gatsby-starter-netlify-cms/./src/components/FullWidthImage.js","webpack://gatsby-starter-netlify-cms/./src/components/Content.js","webpack://gatsby-starter-netlify-cms/./src/templates/surveys-page.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport default function FullWidthImage(props) {\n  const {\n    height = '100vh',\n    img,\n    title,\n    subheading,\n    imgPosition = \"top left\",\n    center = \"false\",\n    children,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n          position: \"relative\",\n          top: \"-3.25rem\",\n          textAlign: center ? \"center\" : \"\"\n        }}\n      >\n        {img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              height: height,\n              width: \"100%\",\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              maxHeight: height,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            className=\"column is-10\"\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n              margin: \"auto\"\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgba(255, 68, 0, 0) 0.5rem 0px 0px, rgb(255, 68, 0, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                  textShadow: \"-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  boxShadow:\n                    \"rgba(255, 68, 0, 0) 0.5rem 0px 0px, rgb(255, 68, 0, 0) -0.5rem 0px 0px\",\n                  backgroundColor: \"rgb(255, 68, 0, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                  textShadow: \"-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n            {children && <div>{children}</div>}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImage.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n);\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n);\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n};\n\nHTMLContent.propTypes = Content.propTypes;\n\nexport default Content;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/Layout\";\nimport { HTMLContent } from \"../components/Content\";\nimport FullWidthImage from \"../components/FullWidthImage\";\n\n// eslint-disable-next-line\nexport const SurveysPageTemplate = ({ title, subtitle, link, image }) => {\n  const heroImage = getImage(image) || image;\n  return (\n    <div style={{ background: '#090a0c' }}>\n      <FullWidthImage img={heroImage} title={title} subheading={subtitle} center=\"true\">\n        <a href={link} target=\"_blank\" rel=\"noreferrer\"><p className=\"paragraph link has-text-centered\">{link}</p></a>\n      </FullWidthImage>\n      {/* <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <div className=\"section\">\n                <h2 className=\"title is-size-3 has-text-weight-bold is-bold-light has-text-centered\">\n                  {title}\n                </h2>\n                <a href={link} target=\"_blank\" rel=\"noreferrer\"><p className=\"paragraph link has-text-centered\">{link}</p></a>\n                <PageContent className=\"content\" content={content} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section> */}\n    </div>\n  );\n};\n\nSurveysPageTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string,\n  contentComponent: PropTypes.func,\n};\n\nconst SurveysPage = ({ data }) => {\n  const { markdownRemark: post } = data;\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <SurveysPageTemplate\n        contentComponent={HTMLContent}\n        title={post.frontmatter.title}\n        subtitle={post.frontmatter.subtitle}\n        link={post.frontmatter.link}\n        content={post.html}\n        image={frontmatter.image}\n      />\n    </Layout>\n  );\n};\n\nSurveysPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default SurveysPage;\n\nexport const surveysPageQuery = graphql`\n  query SurveysPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        subtitle\n        link\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["FullWidthImage","props","height","img","title","subheading","imgPosition","center","children","className","style","display","alignItems","position","top","textAlign","url","src","objectFit","objectPosition","gridArea","width","aspectratio","alt","formats","G","image","maxHeight","layout","placeItems","margin","boxShadow","backgroundColor","color","lineHeight","padding","textShadow","marginTop","HTMLContent","content","dangerouslySetInnerHTML","__html","SurveysPageTemplate","subtitle","link","heroImage","getImage","background","href","target","rel","data","post","markdownRemark","frontmatter","Layout","contentComponent","html"],"sourceRoot":""}